include ~/components/text/text
include ~/components/button/button

mixin dropdown(options={})
  -
    const {
      hasTitle,
      title,
      subtitle,
      value,
      name,
      placeholder,
      dataId,
      open,
      size,
      withButtons,
      classForJs,
      items=[]
    } = options

    const sizes = ['small', 'medium', 'large']

    const mainClass = 'dropdown'
    const inputClass = 'dropdown__input js-dropdown__input'
    const buttonClass = 'dropdown__arrow-button material-icons js-dropdown__arrow-button'
    const dropClass = 'dropdown__drop js-dropdown__drop'
    const itemClass = 'dropdown__item js-dropdown__item'
    const itemNameClass = 'dropdown__item-name js-dropdown__item-name'

    const openModifier = open && 'dropdown--open'
    const sizeModifier = sizes.includes(size) && `dropdown--size-${size}`

  div&attributes({
    class: [
      mainClass,
      sizeModifier,
      openModifier,
      classForJs
    ],
    'data-id': dataId
  })
    if (hasTitle)
      .dropdown__title
        +text({
          text: title,
          type: 'h3',
          color: 'dark-shade-100',
          bold: true,
          hasUpper: true
        })
        if (subtitle)
          +text({
            text: subtitle,
            type: 'h3',
            color: 'dark-shade-50',
            hasUpper: true
          })
    .dropdown__wrapper
      input&attributes({
        class: inputClass,
        type: type,
        'data-type': 'input',
        value: value,
        placeholder: placeholder,
        name: name,
        readOnly: true,
      })
      button&attributes({
        class: buttonClass,
        type: 'button',
        'data-type': 'arrow',
      })='expand_more'
      div(class=dropClass)
        ul.dropdown__list
          each item in items
            li(class=itemClass data-id=item.dataId)
              p(class=itemNameClass)=item.text
              .dropdown__item-controls
                button&attributes({
                  class: [
                    'dropdown__item-button',
                    'dropdown__item-button--type-decrement',
                    'js-dropdown__item-button--type-decrement'
                  ],
                  type: 'button',
                  'data-type': 'decrement'
                })= '-'
                p(class='dropdown__item-counter js-dropdown__item-counter')=item.counter
                button&attributes({
                  class: [
                    'dropdown__item-button',
                    'dropdown__item-button--type-increment',
                    'js-dropdown__item-button--type-increment'
                  ],
                  type: 'button',
                  'data-type': 'increment'
                })= '+'
        if (withButtons)
          .dropdown__buttons
            +button({ text: 'очистить', variant: 'text', classForJs: 'js-dropdown__button--clear', dataType: 'clear' })
            +button({ text: 'применить', variant: 'text', classForJs: 'js-dropdown__button--apply', dataType: 'apply' })
